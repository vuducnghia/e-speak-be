basePath: /api
definitions:
  models.User:
    properties:
      avatar:
        type: string
      email:
        type: string
      google_id:
        type: string
      is_pay:
        type: boolean
      username:
        type: string
    required:
    - email
    - username
    type: object
  models.UserCredentials:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
host: localhost:9000
info:
  contact: {}
  title: Swagger Boilerplate API
  version: "1.0"
paths:
  /application/heartbeat:
    get:
      responses:
        "200":
          description: OK
      summary: return a status
      tags:
      - heartbeat
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserCredentials'
      responses:
        "200":
          description: OK
      security:
      - Bearer: []
      summary: login user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "200":
          description: OK
      summary: create a user
      tags:
      - auth
  /errors/{id}:
    get:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
      security:
      - Bearer: []
      summary: return a error
      tags:
      - errors
  /users:
    get:
      parameters:
      - description: limit
        in: query
        name: limit
        type: string
      - description: page_number
        in: query
        name: page_number
        type: string
      - description: search_query
        in: query
        name: search_query
        type: string
      responses:
        "200":
          description: OK
      security:
      - Bearer: []
      summary: return list users
      tags:
      - users
  /users/{user_id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: user_id
        in: path
        name: user_id
        required: true
        type: string
      responses:
        "200":
          description: OK
      security:
      - Bearer: []
      summary: delete a user
      tags:
      - users
    get:
      parameters:
      - description: user_id
        in: path
        name: user_id
        required: true
        type: string
      responses:
        "200":
          description: OK
      security:
      - Bearer: []
      summary: return a user
      tags:
      - users
    put:
      consumes:
      - application/json
      parameters:
      - description: user_id
        in: path
        name: user_id
        required: true
        type: string
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "200":
          description: OK
      security:
      - Bearer: []
      summary: update a user
      tags:
      - users
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
